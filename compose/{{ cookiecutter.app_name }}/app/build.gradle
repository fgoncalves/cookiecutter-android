plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.example.myapplication"
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.5.21'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation AndroidX.core.ktx
    implementation AndroidX.appCompat
    implementation Google.android.material
    implementation AndroidX.compose.ui
    implementation AndroidX.compose.material
    implementation AndroidX.compose.ui.toolingPreview
    implementation AndroidX.lifecycle.runtimeKtx
    implementation AndroidX.activity.compose

    // Dagger
    implementation Google.dagger.hilt.android
    kapt Google.dagger.hilt.compiler

    {% if cookiecutter.add_network_stack == "y" %}// Retrofit
    implementation Square.retrofit2
    implementation Square.moshi
    implementation Square.retrofit2.converter.moshi
    {% if cookiecutter.add_network_logging == "y" %}implementation Square.okHttp3.loggingInterceptor{% endif %}
    {% endif %}

    {% if cookiecutter.logging_api == "timber" %}implementation JakeWharton.timber{% endif %}

    debugImplementation(AndroidX.compose.ui.testManifest)

    testImplementation 'junit:junit:_'
    testImplementation 'com.google.truth:truth:_'

    androidTestImplementation AndroidX.test.ext.junit
    androidTestImplementation AndroidX.test.espresso.core
    androidTestImplementation AndroidX.compose.ui.testJunit4
}